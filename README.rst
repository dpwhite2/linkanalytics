
Linkanalytics
=============

Introduction
------------

Linkanalytics is a Django app that tracks web accesses by particular visitors.  
Each tracked URL contains a unique identifier which opaquely identifies both 
the visitor and the web resource being visited.  The URLs also contain a hash 
value which ensures that only URLs generated by Linkanalytics are tracked--a 
URL cannot be modified outside of Linkanalytics without rendering it invalid. 

This allows, for instance, links to be sent out and then accesses via those 
links to be counted.


Concepts
--------

The Linkanalytics model is based around four concepts: the *Visitor*, the 
*Tracker*, a *TrackedInstance*, and an *Access*.

The *Visitor* is typically the person or group of people who access a 
Linkanalytics tracked URL.  The *Tracker* is the resource or resources that are 
retrieved via a tracked URL.  So if Alice visits a tracked URL to an online 
newsletter, in this case Alice is the Visitor and the online newsletter is the 
Tracker.  However, each can also represent more general concepts--a Visitor 
need not be an individual, and a Tracker need not be a single resource.

A *TrackedInstance* is a combination of one Visitor and one Tracker.  It is in 
the TrackedInstance that access statistics are actually kept.  It is also in 
the TrackedInstance that the unique identifier that marks URLs is kept.  

An *Access* is generated, not surprisingly, whenever a tracked URL is accessed.  
It is created whether the access was successful or not.  Even if the unique 
identifier or hash value are invalid, an access is saved, but in this case the 
target resource is not returned and the failure is noted.

When a tracked URL is visited, some resource must be returned.  This is done 
using a Django view function and the appropriate function is called by querying 
a urlconf.  (This urlconf may be set using the ``LINKANALYTICS_TARGETS_URLCONF`` 
setting.)  The Linkanalytics term for the resource is a *target*, and the views 
and urls modules are called targetviews and targeturls respectively.


URL Structure
-------------

A Linkanalytics tracked URL is in the following format:
    ``<URLBASE>``/linkanalytics/access/j/``<HASH>``/``<UUID>``/``<URLTAIL>``
    
``URLBASE``:
    The beginning of the URL and one that does not factor in Linkanalytics 
    tracking.  This includes everything from ``http://`` until immediately 
    before ``linkanalytics``.
    
``HASH``:
    A hash value based on the ``SECRET_KEY`` provided by Django, the UUID, and 
    the ``URLTAIL``. (A different secret key can be used by defining 
    ``LINKANALYTICS_SECRET_KEY`` in settings.)
    
``UUID``:
    An identifier that uniquely identifies a Visitor, Tracker pair.  This 
    determines where access statistics for this tracked URL are kept.
    
``URLTAIL``:
    The URL that the targeturls module evaluates and determines which 
    targetview function is called.

``linkanalytics/access/j/``:
    This is simply the default value for this portion of the URL.  Users of the 
    app may modify it to fit their requirements.
    
    
Email App
---------

The email app contained within is built on top of Linkanalytics.  It allows one 
to send emails which, with the help of cooperative recipients, allows the 
sender to know they were received.  It both embeds an invisible image and 
includes links--all of which are tracked.  Of course, all email clients today 
block such images by default, and recipients are wary of following links from 
unknown senders, so this is intended for use within organizations or other 
groups where the recipients already have a prior relationship with the sender.

One can write emails within the app using the Compose interface.  Drafts of 
emails can be saved and edited later.  Once sent, they may not be modified 
except to send them to more contacts.

Once sent, one may find out which recipients have acknowledged that they read 
the email and which have not.


Installation and Configuration
------------------------------

...TODO...


